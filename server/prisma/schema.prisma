// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  READY
  ERROR
  PROCESSING
}

enum VideoRenditionType {
  ORIGINAL
  MEZZANINE
  OTHER
}

model Video {
  id         String           @id @default(uuid())
  status     Status           @default(PROCESSING)
  location   String
  renditions VideoRendition[]
  deleted    Boolean          @default(false)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
}

// A rendition could be the original, a mezzaine file, or a transcode
model VideoRendition {
  id        String             @id @default(uuid())
  status    Status             @default(PROCESSING)
  input     String
  location  String
  metadata  Json?
  type      VideoRenditionType
  video     Video              @relation(fields: [videoId], references: [id], onDelete: Cascade)
  videoId   String             @unique
  deleted   Boolean            @default(false)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

// model Playback {
//   id         String      @id @default(uuid())
//   transcodes Transcode[]
//   videoId    String
//   video      Video       @relation(fields: [videoId], references: [id])
//   status     Status      @default(PROCESSING)
//   deleted    Boolean     @default(false)
//   createdAt  DateTime    @default(now())
//   updatedAt  DateTime    @updatedAt
// }

// model Transcode {
//   id         String    @id @default(uuid())
//   s3Uri      String
//   metadata   String    @default("")
//   status     Status    @default(PROCESSING)
//   videoId    String
//   video      Video     @relation(fields: [videoId], references: [id])
//   playbackId String?
//   playback   Playback? @relation(fields: [playbackId], references: [id])
//   deleted    Boolean   @default(false)
//   createdAt  DateTime  @default(now())
//   updatedAt  DateTime  @updatedAt
// }

// model Thumbnail {
//   id        String   @id @default(uuid())
//   url       String   @default("")
//   s3Uri     String
//   status    Status   @default(PROCESSING)
//   videoId   String
//   video     Video    @relation(fields: [videoId], references: [id])
//   deleted   Boolean  @default(false)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
